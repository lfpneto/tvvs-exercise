name: master

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types:
      - "opened"
      - "synchronize"
      - "reopened"
    branches:
      - master
      - main

jobs:
  format-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install deps
        run: yarn install

      - name: Check format
        run: yarn format:check

  linter-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install deps
        run: yarn install

      - name: Check lint
        run: yarn lint:check

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          path: coverage/lint.json
          name: coverage

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install deps
        run: yarn install

      - name: Test
        run: yarn test

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          path: coverage/sonar-report.xml
          name: coverage
  sonarcloud:
    if: always()
    runs-on: ubuntu-latest
    needs: [linter-check, test]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v2

      - name: Sonarcloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
